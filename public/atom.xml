<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GoodNiceWeb]]></title>
  <link href="http://goodniceweb.me/atom.xml" rel="self"/>
  <link href="http://goodniceweb.me/"/>
  <updated>2015-11-14T23:41:11+03:00</updated>
  <id>http://goodniceweb.me/</id>
  <author>
    <name><![CDATA[Alexey Cherkashin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Brug Meetup Overview]]></title>
    <link href="http://goodniceweb.me/11-14-2015/brug-meetup-overview.html"/>
    <updated>2015-11-14T21:40:01+03:00</updated>
    <id>http://goodniceweb.me/11-14-2015/brug-meetup-overview</id>
    <content type="html"><![CDATA[<p>Today I&rsquo;ve visited BRUG meetup and want to share my experience from it.</p>

<p>First of all I want to thank organizers. You done a great job guys!
Secondly, speakers. I didn&rsquo;t feel boring anytime. Futhermore, lot of tricky parts
were discussed there. <a href="https://twitter.com/leopard_me">@leopard_me</a> (Alexey Vasiliev)
came to us from Kyiv and <a href="https://twitter.com/akirill0v">@akirill0v</a> - from Moskov.
It almost 500 miles for both! Guys, your talks was awesome.</p>

<p>I want to leave here some notices about each talk just for myself. So, here we go.</p>

<!-- more -->


<h3>Juriy Koleda - Ruby and Friends</h3>

<p>The talk about Apache Thrift. &ldquo;Hello World&rdquo; and things like &ldquo;Guys, don&rsquo;t scare it! It amaizing!&rdquo;
Speaker&rsquo;s cheerfulness encorage listeners to keep attention during whole day.</p>

<p>Mostly enough for beginning but right now I haven&rsquo;t any task which require another PL. Anyway, thanks <a href="http://github.com/FUT">FUT</a></p>

<h3>Julia Oleckaya &amp; Konstantin Reido - Web Push Notifications</h3>

<p>They started from history and ended with service for reduce complexity of web push notifications usage.
Girls happen infrequently on Ruby events for us, so we very glad to hear their talks.</p>

<p>I haven&rsquo;t worked with Web Push Notifications yet but looks like it really hard to customize it.
I hope, service, which they descibed, will not off soon. Save it in bookmarks: <a href="https://github.com/rpush/rpush">https://github.com/rpush/rpush</a></p>

<h3>Alexandr Kirillov - Ruby Object Mapper: Revolution</h3>

<p>First pure Ruby talk. The author told about <a href="https://github.com/rom-rb/rom">ROM</a>.
He started from good and bad parts of ActiveRecord and then
described basic how to understand and use ROM.</p>

<p>Mainlines:</p>

<ul>
<li>ROM has five main components: Adapters, Relations, Mappers, Commands and Repositories</li>
<li>don&rsquo;t rewrite whole project from ActiveRecord to ROM just because you heard smth. about it</li>
<li>if you need smth. customizable: different storages, super custom select and insert data, etc. etc - use ROM
for prototyping still use ActiveRecord - don&rsquo;t increase complexity until it will be necessary</li>
<li>ROM has a lot of storages: if you need save your data in different ways - ROM is for you</li>
</ul>


<h3>Alexey Vasiliev - Crystal: Ruby syntax and C performance</h3>

<p><a href="https://twitter.com/leopard_me">@leopard_me</a> introduced Crystal for us. Basics,
similarities and differencies with Ruby, good and bad parts. Full coverage from the speaker - no complaints.</p>

<p>Summary:</p>

<ul>
<li>compiled language - comparing performance with Ruby do not relevant</li>
<li>NOT PRODUCTION READY YET</li>
<li>almost like GoLang on performance</li>
<li>pretty Ruby syntax</li>
<li>under ACTIVE development</li>
<li>has not much tools and utils, here some of them:
<a href="https://github.com/kemalcr/kemal">kemal</a> - sinatra inspired web framework
<a href="https://github.com/Codcore/amethyst">amethyst</a> - more abstract web framework but not rails :)
<a href="https://github.com/ysbaddaden/shards">shards</a> - their bundler (dependency resolver)
<a href="https://github.com/veelenga/awesome-crystal">awesome-list</a> - other tools in pretty awesome github style ;)</li>
</ul>


<h3>Andrew Kumanyaev - As we fled from PostgreSQL or when relational databases can not handle</h3>

<p>Have not idea what it was about. I was off during it talk :(</p>

<h3>Sergey Alexeev - Hunting down memory leaks</h3>

<p>Lot of fun on latest talk. Thanks <a href="https://twitter.com/AlexeevS">@AlexeevS</a>. From the other hand - he described really
tricky things deeply and gripping. To be honest - memory leaks happen not so friquently, but when they are,
I want to understand what I need to do to resolve an issue. And author explained steps:</p>

<ul>
<li>Find memory leak</li>
<li>Destroy it</li>
</ul>


<p>To do first step you can use few helpers: <a href="https://github.com/ASoftCo/leaky-gems">leaky gems list</a>,
<a href="http://newrelic.com/">New Relic</a>, and smth. else which I&rsquo;ll describe as soon as presentations will shared.</p>

<h2>Conclusion</h2>

<p>I feel not enough Ruby for me - only one pure Ruby talk. But, how Alexey said behind a scenes,
&ldquo;we know a lot of Ruby things and to have success on such meetup speaker needs to talk about
things, which stay away from Ruby Community&rdquo;. I think he mostly right. But when I back to my project
I feel maybe we missing smth. important about Ruby? Maybe we can&rsquo;t cook good OOP?
I still remember <a href="https://www.youtube.com/watch?v=OMPfEXIlTVE">Nothing is Something</a>
by <a href="https://twitter.com/sandimetz">@sandimetz</a> from RubyConf2015 and I think
that lot of things and be implemented better than now.</p>

<p>Anyway, I was really glad to have such good weekend like this. Hope you feel same if you visited this event.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 Ways to Add Prefix to a String]]></title>
    <link href="http://goodniceweb.me/08-17-2015/5-ways-to-add-prefix-to-a-string.html"/>
    <updated>2015-08-17T09:10:29+03:00</updated>
    <id>http://goodniceweb.me/08-17-2015/5-ways-to-add-prefix-to-a-string</id>
    <content type="html"><![CDATA[<p>Mostly all of us like their our names. That&rsquo;s why effective email often starts from username.
I had a task where I need to fetch any information about receiver and add it to very beginning of email.</p>

<p>So, challenge accepted and I writing fetch method, then refactor it to class and ta-da:
we have a chance to guess username. Our emails&rsquo;ll become much pretty. But wait!
Need to add it name to email at first. And I started think about: which way most common for it case,
how great rubist can implement that? Below I present five variants which I found.</p>

<!--more-->


<h2>1. Array#join</h2>

<p><a href="http://ruby-doc.org/core-2.2.2/Array.html#method-i-join">Array#join</a></p>

<p>What? Array? Did you joke? Sure, not) Lets see:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">str</span> <span class="o">=</span> <span class="s2">&quot;world&quot;</span>
</span><span class='line'><span class="n">prefix</span> <span class="o">=</span> <span class="s2">&quot;Hello, &quot;</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="o">[</span><span class="n">prefix</span><span class="p">,</span> <span class="n">str</span><span class="o">].</span><span class="n">join</span> <span class="c1"># =&gt; &quot;Hello, world&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>But what about GC in this case? Here we use 3 strings and 1 array.
Not really careful about a RAM. Lets see another variants.</p>

<h2>2. Insert</h2>

<p><a href="http://ruby-doc.org/core-2.2.2/String.html#method-i-insert">String#insert</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">str</span> <span class="o">=</span> <span class="s2">&quot;world&quot;</span>
</span><span class='line'><span class="n">str</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;Hello, &quot;</span><span class="p">)</span> <span class="c1"># =&gt; Hello, world</span>
</span></code></pre></td></tr></table></div></figure>


<p>It created only 2 strings, cool! How you can see it also return changed line immediately.
Why I mention that? Please, see #3 and #4</p>

<h2>3. [with Regexp]</h2>

<p><a href="http://ruby-doc.org/core-2.2.2/String.html#method-i-5B-5D-3D">String#:[]</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">str</span> <span class="o">=</span> <span class="s2">&quot;world&quot;</span>
</span><span class='line'><span class="n">str</span><span class="o">[</span><span class="sr">/\A/</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;Hello, &quot;</span> <span class="c1"># =&gt; &quot;Hello, &quot;</span>
</span><span class='line'><span class="n">str</span>                   <span class="c1"># =&gt; &quot;Hello, world&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Isn&rsquo;t that awesome? Ruby <code>String#:[]</code> method can get <code>Regexp</code> like an argument!
Did you know about it before? I nope) So I glad to gain new experience.</p>

<h2>4. [with funny smile]</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">str</span> <span class="o">=</span> <span class="s2">&quot;world&quot;</span>
</span><span class='line'><span class="n">str</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;Hello, &quot;</span> <span class="c1"># =&gt; &quot;Hello, &quot;</span>
</span><span class='line'><span class="n">str</span>                  <span class="c1"># =&gt; &quot;Hello, world&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see from documentation, the squarebrackets method can get a second argument.
And when it is, first arg become an index, which you can specify for replacing
next <code>%second_arg%</code> values.</p>

<h2>5. Prepend</h2>

<p><a href="http://ruby-doc.org/core-2.2.2/String.html#method-i-prepend">String#prepend</a></p>

<p>And the last one, but not in relevance.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">str</span> <span class="o">=</span> <span class="s2">&quot;world&quot;</span>
</span><span class='line'><span class="n">str</span><span class="o">.</span><span class="n">prepend</span><span class="p">(</span><span class="s2">&quot;Hello, &quot;</span><span class="p">)</span> <span class="c1"># =&gt; &quot;Hello, world&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Conclusion</h1>

<p>So, which one you&rsquo;ll use? It&rsquo;s completely your choice. I think that most ruby way to use <code>prepend</code>.
But lets see benchmarks at first.</p>

<p><a href="https://gist.github.com/goodniceweb/85665d4fcfc3f1c0a423">Benchmark Gist</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Comparison:
</span><span class='line'>       String#insert:  2557799.1 i/s
</span><span class='line'>      String#prepend:  2521598.6 i/s - 1.01x slower
</span><span class='line'>        String#<span class="o">[</span>0,0<span class="o">]</span>:  2422770.0 i/s - 1.06x slower
</span><span class='line'>          Array#join:  1650504.4 i/s - 1.55x slower
</span><span class='line'>       String#<span class="o">[</span>/<span class="se">\A</span>/<span class="o">]</span>:  1065932.3 i/s - 2.40x slower
</span></code></pre></td></tr></table></div></figure>


<p>Wow, looks great! Ruby way not only good for eyes but faster as well for it case. Glad to know it.
Are you not?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jenkins Docker Container for Rails]]></title>
    <link href="http://goodniceweb.me/05-04-2015/jenkins-rails-docker-container.html"/>
    <updated>2015-05-04T12:25:29+03:00</updated>
    <id>http://goodniceweb.me/05-04-2015/jenkins-rails-docker-container</id>
    <content type="html"><![CDATA[<p>Today I want to present my first contribution to Docker community -
<a href="https://registry.hub.docker.com/u/goodniceweb/jenkins-rails/">Jenkins Rails image</a>.</p>

<p>For better understanding what work was done I propose to look into
<a href="https://github.com/goodniceweb/docker-jenkins-rails/blob/master/Dockerfile">Dockerfile</a>.
At first lines you can see system upgrades, installing Rails requirements
and npm. Secondly, we ignore auto generated docs and install useful plugins.</p>

<p>That&rsquo;s it! Is it so little? Maybe, but it&rsquo;s enough for start. Almost.</p>

<p>Are you want to know how to use and extend it for your needs?
What are you waiting for - press a &ldquo;Read more&rdquo; button.</p>

<!--more-->


<h2>How to use</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>docker run -p 8080:8080 <span class="se">\</span>
</span><span class='line'>           -v /your/host/volume:/home/jenkins_home <span class="se">\</span>
</span><span class='line'>           goodniceweb/jenkins-rails:latest
</span></code></pre></td></tr></table></div></figure>


<p>Visit <code>your.domain.example:8080</code> and voila: here is Jenkins
prepared for your Rails project!</p>

<h2>How to extend</h2>

<p>In few cases you find something missing in this based image.
Fortunately, it&rsquo;s easy to extend.</p>

<p>Firstly, create your own Dockerfile.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>FROM goodniceweb/jenkins-rails:latest
</span><span class='line'>MAINTAINER Your Name &lt;your@email&gt;
</span><span class='line'>
</span><span class='line'><span class="c"># capybara requirements</span>
</span><span class='line'><span class="c"># RUN npm install -g phantomjs</span>
</span><span class='line'>
</span><span class='line'><span class="c"># dependencies of running javascript test on instances without X </span>
</span><span class='line'><span class="c"># RUN apt-get install -y vnc4server </span>
</span><span class='line'>
</span><span class='line'><span class="c"># help to avoid error MoveTargetOutOfBoundsError</span>
</span><span class='line'><span class="c"># RUN apt-get install -y fluxbox</span>
</span><span class='line'>
</span><span class='line'><span class="c"># rmagick dependencies</span>
</span><span class='line'><span class="c"># RUN apt-get install -y imagemagick</span>
</span><span class='line'>
</span><span class='line'><span class="c"># dependencies of capybara webkit gem</span>
</span><span class='line'><span class="c"># RUN apt-get install -y libqt4-dev libqtwebkit-dev</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Good practice - drop back to regular user</span>
</span><span class='line'>USER jenkins
</span><span class='line'>
</span><span class='line'>ENTRYPOINT <span class="o">[</span><span class="s2">&quot;/usr/local/bin/jenkins.sh&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>I think above comments are very self explain.</p>

<p>Secondly, run <code>docker build</code> command. For ex.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>docker build -t my-nick/my-jenkins-build:latest .
</span></code></pre></td></tr></table></div></figure>


<p>Finally, just run it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>docker run -p 8080:8080 <span class="se">\</span>
</span><span class='line'>           -v /your/host/volume:/home/jenkins_home <span class="se">\</span>
</span><span class='line'>           my-nick/my-jenkins-build:latest
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it! So easy, isn&rsquo;t?</p>

<p>I hope you find it useful. Have a nice web!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 Tips for Faster Intro to New Rails Project]]></title>
    <link href="http://goodniceweb.me/04-12-2015/5-tips-for-faster-intro-to-new-rails-project.html"/>
    <updated>2015-04-12T15:15:36+03:00</updated>
    <id>http://goodniceweb.me/04-12-2015/5-tips-for-faster-intro-to-new-rails-project</id>
    <content type="html"><![CDATA[<p>What most common problems when you receive new project? No right answer here.
Some people find not so easy to figure out models relationships, some have troubles
with estimates at beginning.</p>

<p>Here I&rsquo;ll describe what help me to dive intro new project faster. Btw,
<a href="https://bitly.com/a/bitlinks/1aaBwNi">here</a> my presentation which I made in five minutes
before free talk section on <a href="http://www.meetup.com/kharkov-rb/events/221648244">RubyMeetup #12</a></p>

<!-- more -->


<h2>1. Static Analysis Tools</h2>

<p>Ruby have a lot of static analysis tools, ex. <a href="https://github.com/troessner/reek">reek</a>,
<a href="https://github.com/seattlerb/flay">flay</a>, <a href="https://github.com/yorickpeterse/ruby-lint">ruby-lint</a>,
etc. etc. But I found most helpful for me the <a href="https://github.com/seattlerb/flog">flog</a>.
It counts <a href="http://en.wikipedia.org/wiki/Cyclomatic_complexity">cyclomatic complexity</a> of method.
So if you may to estimate task, which assumes working with existing code,
you just see it&rsquo;s value of <code>flog</code> output. After that you will have one part of puzzle.</p>

<p>From the other hand, flogging whole project can take much time. Here is tip for make
static analysis easier:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>flog -gm . &gt; project_name.flog
</span></code></pre></td></tr></table></div></figure>


<p>Than, if you need to see flog results, you just execute smth. like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>grep ‘method_name’ *.flog
</span></code></pre></td></tr></table></div></figure>


<h2>2. Project History</h2>

<p>Don&rsquo;t forget that <code>git log</code> have a lot of cool options. Here few of them:</p>

<ul>
<li>-p</li>
<li>-L</li>
<li>&ndash;author</li>
<li>&ndash;since</li>
<li>&ndash;until</li>
</ul>


<p>Also I highly recommend to use <code>git blame</code> I your favorite editor/IDE.
I use vim. If you too, maybe you find useful <a href="https://github.com/tpope/vim-fugitive">git fugitive</a>
plugin.</p>

<p><img src="https://blog.xargs.io/presentations/surviving_large_unfamiliar_codebases/images/fugitive-git-blame.png"></p>

<p>Most frequently I used <code>blame</code> with <code>flog</code> for build leaderboard of previous developers
in my mind.</p>

<p>Know project history will help you to estimate more precisely.</p>

<h2>3. Routes</h2>

<p>Where I can find code, which executed on this route? - one of my most common questions in new project.</p>

<p>On big projects routes is permanent as usual. Everybody knows that <code>rake</code> command preload whole Rails
environment. So I propose to execute <code>rake routes</code> once.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake routes &gt; project_name.routes
</span></code></pre></td></tr></table></div></figure>


<p>After above command you can easily find project route by single line command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>grep “where_is_stupid_route” *.routes
</span></code></pre></td></tr></table></div></figure>


<h2>4. Graphical Representation of Schema</h2>

<p>Did you whenever want to see whole bunch of models, attributes and relationships in pretty
graphic? There is nothing easier. Few gems for this already exist.</p>

<ul>
<li><a href="https://github.com/voormedia/rails-erd">https://github.com/voormedia/rails-erd</a></li>
<li><a href="https://github.com/preston/railroady">https://github.com/preston/railroady</a></li>
</ul>


<h3>Rails-erd</h3>

<p><img src="http://rails-erd.rubyforge.org/examples/event-forms.png"></p>

<h3>Railroady</h3>

<p><img src="https://camo.githubusercontent.com/c369587851d104f137a32a288f0dd3aa3614c320/68747470733a2f2f7261772e6769746875622e636f6d2f6d70656c7a736865726d616e2f63636d74762f6d61737465722f646f63732f6d6f64656c732e706e67"></p>

<h2>5. Take a task!</h2>

<p>Only during work you will get real experience. No another way to feel yourself comfortable in new project.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploying of One App]]></title>
    <link href="http://goodniceweb.me/03-08-2015/deploying-of-one-app.html"/>
    <updated>2015-03-08T01:57:32+03:00</updated>
    <id>http://goodniceweb.me/03-08-2015/deploying-of-one-app</id>
    <content type="html"><![CDATA[<p>I have Rails 4.1.8 app. One day I want to deploy it in production. Used <code>capistrano (3.3.5)</code> for it.</p>

<p>On server I used Apache2 + Passenger (4.0.59). Install of apache module was fine as usual. But on visit web it raise <code>stdin is not a tty</code> passenger error. I looked into <a href="https://code.google.com/p/phusion-passenger/issues/detail?id=891">few</a> <a href="https://code.google.com/p/phusion-passenger/issues/detail?id=891">places</a> <a href="https://code.google.com/p/phusion-passenger/issues/detail?id=914">for</a> <a href="https://github.com/phusion/passenger/issues/1129">figure out</a> problem but have not success.</p>

<p>Then I removed <code>apache + passenger</code> and installed <code>nginx + unicorn</code>. It also not worked for me. Any useful info in logs - only &ldquo;500 error&rdquo;, &ldquo;smth. went wrong&rdquo;. I felt that something magical going on and disable capistrano recipies. I run it by hand like a daemon. In retrospect I see its mistake.</p>

<!--more-->


<p>Next time I tried to use <code>thin</code> instead of <code>unicorn</code> but it not worked too. With <code>puma</code> also have not results.</p>

<p>Then I tried to run server manually from console and gotcha: puma was blocked by webrick with some custom settings. Here is output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ RAILS_ENV</span><span class="o">=</span>production bundle <span class="nb">exec </span>rails <span class="nv">s</span>
</span><span class='line'><span class="o">=</span>&gt; Booting <span class="nv">Puma</span>
</span><span class='line'><span class="o">=</span>&gt; Rails 4.1.8 application starting in production on http://0.0.0.0:3000
</span><span class='line'><span class="o">=</span>&gt; Run <span class="sb">`</span>rails server -h<span class="sb">`</span> <span class="k">for</span> more startup <span class="nv">options</span>
</span><span class='line'><span class="o">=</span>&gt; Notice: server is listening on all interfaces <span class="o">(</span>0.0.0.0<span class="o">)</span>. Consider using 127.0.0.1 <span class="o">(</span>--binding option<span class="o">)</span>
</span><span class='line'><span class="o">=</span>&gt; Ctrl-C to shutdown server
</span><span class='line'><span class="o">[</span>2015-02-28 06:32:46<span class="o">]</span> INFO  WEBrick 1.3.1
</span><span class='line'><span class="o">[</span>2015-02-28 06:32:46<span class="o">]</span> INFO  ruby 2.1.5 <span class="o">(</span>2014-11-13<span class="o">)</span> <span class="o">[</span>i686-linux<span class="o">]</span>
</span><span class='line'><span class="o">[</span>2015-02-28 06:32:46<span class="o">]</span> INFO  WEBrick::HTTPServer#start: <span class="nv">pid</span><span class="o">=</span><span class="m">19659</span> <span class="nv">port</span><span class="o">=</span>2010
</span><span class='line'>^C<span class="o">[</span>2015-02-28 06:32:54<span class="o">]</span> INFO  going to shutdown ...
</span><span class='line'><span class="o">[</span>2015-02-28 06:32:54<span class="o">]</span> INFO  WEBrick::HTTPServer#start <span class="k">done</span>.
</span><span class='line'>Puma 2.11.1 starting...
</span><span class='line'>* Min threads: 0, max threads: 16
</span><span class='line'>* Environment: production
</span><span class='line'>* Listening on tcp://0.0.0.0:3000
</span></code></pre></td></tr></table></div></figure>


<p>Above you can see: puma tried to initialize, reach line <code>=&gt; Ctrl-C to shutdown server</code>, than webrick interrupt her flow, initialize and block it.
When I shut down webrick by <code>^C</code>. puma continue to initialize and everything work fine.</p>

<p>I tried to search in whole rails repo, in whole source of my app and no found smth. for initialize webrick in production with such strange custom behaviour: always <code>pid=19659 port=2010</code>, always block any server you use: passenger, unicorn, thin, puma, and&hellip; webrick o_0. Here is output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ RAILS_ENV</span><span class="o">=</span>production bundle <span class="nb">exec </span>rails s <span class="nv">webrick</span>
</span><span class='line'><span class="o">=</span>&gt; Booting <span class="nv">WEBrick</span>
</span><span class='line'><span class="o">=</span>&gt; Rails 4.1.8 application starting in production on http://0.0.0.0:3000
</span><span class='line'><span class="o">=</span>&gt; Run <span class="sb">`</span>rails server -h<span class="sb">`</span> <span class="k">for</span> more startup <span class="nv">options</span>
</span><span class='line'><span class="o">=</span>&gt; Notice: server is listening on all interfaces <span class="o">(</span>0.0.0.0<span class="o">)</span>. Consider using 127.0.0.1 <span class="o">(</span>--binding option<span class="o">)</span>
</span><span class='line'><span class="o">=</span>&gt; Ctrl-C to shutdown server
</span><span class='line'><span class="o">[</span>2015-02-28 06:35:31<span class="o">]</span> INFO  WEBrick 1.3.1
</span><span class='line'><span class="o">[</span>2015-02-28 06:35:31<span class="o">]</span> INFO  ruby 2.1.5 <span class="o">(</span>2014-11-13<span class="o">)</span> <span class="o">[</span>i686-linux<span class="o">]</span>
</span><span class='line'><span class="o">[</span>2015-02-28 06:35:31<span class="o">]</span> INFO  WEBrick::HTTPServer#start: <span class="nv">pid</span><span class="o">=</span><span class="m">19698</span> <span class="nv">port</span><span class="o">=</span>2010
</span><span class='line'>^C<span class="o">[</span>2015-02-28 06:35:43<span class="o">]</span> INFO  going to shutdown ...
</span><span class='line'><span class="o">[</span>2015-02-28 06:35:43<span class="o">]</span> INFO  WEBrick::HTTPServer#start <span class="k">done</span>.
</span><span class='line'><span class="o">[</span>2015-02-28 06:35:43<span class="o">]</span> INFO  WEBrick 1.3.1
</span><span class='line'><span class="o">[</span>2015-02-28 06:35:43<span class="o">]</span> INFO  ruby 2.1.5 <span class="o">(</span>2014-11-13<span class="o">)</span> <span class="o">[</span>i686-linux<span class="o">]</span>
</span><span class='line'><span class="o">[</span>2015-02-28 06:35:43<span class="o">]</span> INFO  WEBrick::HTTPServer#start: <span class="nv">pid</span><span class="o">=</span><span class="m">19698</span> <span class="nv">port</span><span class="o">=</span>3000
</span></code></pre></td></tr></table></div></figure>


<p>I tried to upgrade my rails app to 4.1.9 - same result. Then - to 4.2.0 and it also not work.</p>

<p>Btw, in development mode everything was fine.</p>

<p>Guys from my team suggested to track every called line of code. I found <a href="http://ruby-doc.org//core-2.2.0/Kernel.html#method-i-set_trace_func">Kernel#set_trace_func</a> very useful for it, injected it to <code>bin/rails</code> script and thats it! Enemy was detected. Thats was <code>syntaxhighlighter</code> test from tinymce extensions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Merge Model Instances]]></title>
    <link href="http://goodniceweb.me/03-07-2015/merge-model-instances.html"/>
    <updated>2015-03-07T23:18:42+03:00</updated>
    <id>http://goodniceweb.me/03-07-2015/merge-model-instances</id>
    <content type="html"><![CDATA[<p>Sometimes we can understand that our model field required validation too late. Better late than nerer: you add validation to model and get better new records. But what we can do with old invalid data?</p>

<p>Just merge it!</p>

<p>Yes, I know: sometimes it can be impossible. For sensitive, personal data maybe. But sometimes it can give very good results.</p>

<p>In one of my projects was need to merge customers records. There some tools for ActiveRecord:</p>

<!--more-->


<ol>
<li><a href="https://github.com/collectiveidea/merger">https://github.com/collectiveidea/merger</a></li>
<li><a href="https://github.com/grosser/ar_merge">https://github.com/grosser/ar_merge</a></li>
</ol>


<p>First - older solution, add <code>merge!</code> method to your model instance. Unmaintainable anymore.
Second - newer solution(looks like it work with rails 4).
All above gems provide nice features:
- different built-in protections
- removes merged records
- merge associations as well</p>

<p>Sounds great, but not for MongoId. For MongoId I found only <code>merge-mongoid</code>:
<a href="https://github.com/fallanic/merge-mongoid">https://github.com/fallanic/merge-mongoid</a></p>

<p>It contains almost all required things, only associations was not merged.</p>

<p>For me it was important so I forked this gem and add missing feature. I also rewrite all tests, because looks like previous maintainer is not Ruby developer =)
So, for now you will find new versions here: <a href="https://github.com/goodniceweb/merge-mongoid">https://github.com/goodniceweb/merge-mongoid</a></p>

<p>Lot of things in TODO:
- merge more association and embedded types correct
- rewrite hard to read code
- tests with differents environments and mongoid versions</p>

<p>Therefore, pull requests are welcome!</p>

<p>Have a nice web!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3 Typical Mistakes on Bundle Install Command]]></title>
    <link href="http://goodniceweb.me/11-29-2014/3-typical-mistakes-on-bundle-install-command.html"/>
    <updated>2014-11-29T20:51:13+03:00</updated>
    <id>http://goodniceweb.me/11-29-2014/3-typical-mistakes-on-bundle-install-command</id>
    <content type="html"><![CDATA[<h2>1. Old rubygem</h2>

<p>One day I tried to <code>bundle install</code> like always, but… I had it error</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ERROR:  While executing gem ... <span class="o">(</span>Gem::RemoteFetcher::UnknownHostError<span class="o">)</span>
</span><span class='line'>    no such name <span class="o">(</span>https://api.rubygems.org/gems/%any_gem_as_you_want-version%<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>…instead new gems. Of course, I had not problem with <code>gem '%any_gem_as_you_want-version%'</code>. It was smth. else.</p>

<p>Fast googling show me that can catch it error for many reasons. In a my case to resolve a problem I need only update rubygem in single command:</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem update --system
</span></code></pre></td></tr></table></div></figure>


<p>Also I find that some of gems can be too old for new rubygem. You can check it by <code>gem outdated</code> command. If it retrieve you smth., maybe you find useful to update it gems by <code>gem update %gem_name%</code></p>

<h2>2. Nokogiri error</h2>

<p>When I installed nokorigi gem I had an error with big backtrace:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Building nokogiri using packaged libraries.
</span><span class='line'>Building libxml2-2.8.0 <span class="k">for</span> nokogiri with the following patches applied:
</span><span class='line'>        - 0001-Fix-parser-local-buffers-size-problems.patch
</span><span class='line'>        - 0002-Fix-entities-local-buffers-size-problems.patch
</span><span class='line'>        - 0003-Fix-an-error-in-previous-commit.patch
</span><span class='line'>        - 0004-Fix-potential-out-of-bound-access.patch
</span><span class='line'>        - 0005-Detect-excessive-entities-expansion-upon-replacement.patch
</span><span class='line'>        - 0006-Do-not-fetch-external-parsed-entities.patch
</span><span class='line'>        - 0007-Enforce-XML_PARSER_EOF-state-handling-through-the-pa.patch
</span><span class='line'>        - 0008-Improve-handling-of-xmlStopParser.patch
</span><span class='line'>        - 0009-Fix-a-couple-of-return-without-value.patch
</span><span class='line'>        - 0010-Keep-non-significant-blanks-node-in-HTML-parser.patch
</span><span class='line'>        - 0011-Do-not-fetch-external-parameter-entities.patch
</span><span class='line'>************************************************************************
</span><span class='line'>IMPORTANT!  Nokogiri builds and uses a packaged version of libxml2.
</span><span class='line'>
</span><span class='line'>If this is a concern <span class="k">for</span> you and you want to use the system library
</span><span class='line'>instead, abort this installation process and reinstall nokogiri as
</span><span class='line'>follows:
</span><span class='line'>
</span><span class='line'>    gem install nokogiri -- --use-system-libraries
</span><span class='line'>
</span><span class='line'>If you are using Bundler, tell it to use the option:
</span><span class='line'>
</span><span class='line'>    bundle config build.nokogiri --use-system-libraries
</span><span class='line'>    bundle install
</span><span class='line'>
</span><span class='line'>However, note that nokogiri does not necessarily support all versions
</span><span class='line'>of libxml2.
</span><span class='line'>
</span><span class='line'>For example, libxml2-2.9.0 and higher are currently known to be broken
</span><span class='line'>and thus unsupported by nokogiri, due to compatibility problems and
</span><span class='line'>XPath optimization bugs.
</span><span class='line'>************************************************************************
</span></code></pre></td></tr></table></div></figure>


<p><strong>This is solution:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install libxslt1-dev
</span></code></pre></td></tr></table></div></figure>


<h2>3. Rmagick</h2>

<p>With rmagick I retrieve similar problem:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I have trouble with it:
</span><span class='line'>Gem::Ext::BuildError: ERROR: Failed to build gem native extension.
</span><span class='line'>
</span><span class='line'>    /home/adminuser/.rvm/rubies/ruby-2.1.1/bin/ruby extconf.rb
</span><span class='line'>checking <span class="k">for</span> Ruby version &gt;<span class="o">=</span> 1.8.5... yes
</span><span class='line'>checking <span class="k">for</span> gcc... yes
</span><span class='line'>checking <span class="k">for</span> Magick-config... no
</span><span class='line'>Can<span class="s1">&#39;t install RMagick 2.13.2. Can&#39;</span>t find Magick-config in /home/adminuser/.rvm/gems/ruby-2.1.1/bin:/home/adminuser/.rvm/gems/ruby-2.1.1@global/bin:/home/adminuser/.rvm/rubies/ruby-2.1.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/home/adminuser/.rvm/bin:/home/adminuser/.rvm/bin
</span><span class='line'>
</span><span class='line'>*** extconf.rb failed ***
</span><span class='line'>Could not create Makefile due to some reason, probably lack of necessary
</span><span class='line'>libraries and/or headers.  Check the mkmf.log file <span class="k">for</span> more details.  You may
</span><span class='line'>need configuration options.
</span><span class='line'>
</span><span class='line'>Provided configuration options:
</span><span class='line'>
</span><span class='line'>extconf failed, <span class="nb">exit </span>code <span class="m">1</span>
</span><span class='line'>
</span><span class='line'>Gem files will remain installed in /home/adminuser/.rvm/gems/ruby-2.1.1/gems/rmagick-2.13.2 <span class="k">for</span> inspection.
</span><span class='line'>Results logged to /home/adminuser/.rvm/gems/ruby-2.1.1/extensions/x86-linux/2.1.0/rmagick-2.13.2/gem_make.out
</span><span class='line'>An error occurred <span class="k">while</span> installing rmagick <span class="o">(</span>2.13.2<span class="o">)</span>, and Bundler cannot <span class="k">continue</span>.
</span><span class='line'>Make sure that <span class="sb">`</span>gem install rmagick -v <span class="s1">&#39;2.13.2&#39;</span><span class="sb">`</span> succeeds before bundling.
</span></code></pre></td></tr></table></div></figure>


<p>Here is solution (be dangerous, it need over 180MB free space):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install imagemagick libmagickwand-dev
</span></code></pre></td></tr></table></div></figure>


<p>Have a nice web!</p>
]]></content>
  </entry>
  
</feed>
